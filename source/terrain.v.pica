; Example PICA200 vertex shader

; Uniforms
	.fvec projection[4];, modelView[4]
	.fvec lightVec, lightClr, chunkPos, material[2]
	.alias mat_amb material[0]
	.alias mat_dif material[1]
	
	; Constants
	.constf myconst(0.0, 1.0, -1.0, -0.5)
	.constf myconst2(0.5, 0.25, 0.125, 0.0)
	
	.alias  zeros myconst.xxxx ; Vector full of zeros
	.alias  ones  myconst.yyyy ; Vector full of ones
	
	; Outputs
	.out outpos position
	.out outtc0 texcoord0
	.out outclr color
	
	; Inputs (defined as aliases for convenience)
	.alias inpos v0
	.alias intex v1
	.alias innrm v2
	.alias inao v3
	
	.proc main
		; Force the w component of inpos to be 1.0
		mul r0, myconst2.zzz, inpos
		add r0, chunkPos, r0
		mov r0.w,   ones

		; outpos = projection * r1
		dp4 outpos.x, projection[0], r0
		dp4 outpos.y, projection[1], r0
		dp4 outpos.z, projection[2], r0
		dp4 outpos.w, projection[3], r0
	
		; outtex = intex
		mov outtc0, intex
	
		mov r1.xyz, innrm
		dp3 r0.x, lightVec,      r1
		add r0.x, zeros,         -r0
		max r0,   zeros,         r0
	
		mov r1, zeros
		mov r1.w, ones
		; r1 += diffuseColor * lightClr * diffuseLevel
		mul r2, lightClr, r0.xxxx
		mad r1, r2, mat_dif, r1
	
		; r1 += ambientColor * lightClr
		mul r2, myconst2.yyyy, inao.xxxx 
		mad r1, r2, mat_amb, r1
	
		; outclr = clamp r1 to [0,1]
		min outclr, ones, r1
	
		; We're finished
		end
	.end
	